{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"els",
				"elapsedTime"
			],
			[
				"http",
				"httpApp"
			],
			[
				"dis",
				"distCerts"
			],
			[
				"htt",
				"httpsApp"
			],
			[
				"ht",
				"httpApp"
			],
			[
				"st",
				"Stage"
			],
			[
				"cre",
				"createServer"
			],
			[
				"le",
				"letsEncrypt"
			],
			[
				"exis",
				"existingRecord"
			],
			[
				"exi",
				"existingRecord"
			],
			[
				"co",
				"config"
			],
			[
				"ex",
				"existingRecord"
			],
			[
				"const",
				"constants"
			],
			[
				"publ",
				"publicKey"
			],
			[
				"pub",
				"public_key"
			],
			[
				"requ",
				"request"
			],
			[
				"req",
				"request"
			],
			[
				"cons",
				"constants"
			],
			[
				"con",
				"constants"
			],
			[
				"curr",
				"currentLine"
			],
			[
				"cur",
				"currentLine"
			],
			[
				"pi",
				"printFileLocation"
			],
			[
				"l",
				"line"
			],
			[
				"pri",
				"printSuccess"
			],
			[
				"desc",
				"description"
			],
			[
				"print",
				"printError"
			],
			[
				"prin",
				"printError"
			],
			[
				"stu",
				"stubs"
			],
			[
				"fa",
				"failure"
			],
			[
				"wi",
				"withDir"
			],
			[
				"eno",
				"enoentError"
			],
			[
				"expec",
				"expectPath"
			],
			[
				"er",
				"erase"
			],
			[
				"ge",
				"getPrototypeOf"
			],
			[
				"gp",
				"getAllProperties"
			],
			[
				"pro",
				"properties"
			],
			[
				"node",
				"node_modules"
			],
			[
				"rand",
				"randomObject"
			],
			[
				"str",
				"strict"
			],
			[
				"v",
				"variable"
			],
			[
				"scop",
				"scope"
			],
			[
				"scope",
				"scopeManager"
			],
			[
				"p",
				"pipelines"
			],
			[
				"re",
				"result"
			],
			[
				"promi",
				"resultPromise"
			],
			[
				"reu",
				"resultPromise"
			],
			[
				"stage",
				"stagePromises"
			],
			[
				"sta",
				"stages"
			],
			[
				"stag",
				"Stage"
			],
			[
				"comm",
				"command"
			],
			[
				"com",
				"command"
			],
			[
				"tsak",
				"taskLists"
			],
			[
				"task",
				"taskLists"
			],
			[
				"new",
				"newSSHKey"
			],
			[
				"tl",
				"taskLists"
			],
			[
				"sd",
				"startDevServer"
			],
			[
				"taskl",
				"taskLists"
			],
			[
				"fai",
				"failed"
			],
			[
				"rerp",
				"reportStatus"
			],
			[
				"ev",
				"env"
			],
			[
				"rep",
				"reportStatus"
			],
			[
				"stat",
				"status"
			],
			[
				"sch",
				"schemas"
			],
			[
				"no",
				"node_env"
			],
			[
				"pa",
				"paths"
			],
			[
				"exe",
				"execPromise"
			],
			[
				"check",
				"checkDependencies"
			],
			[
				"digi",
				"digitalOcean"
			],
			[
				"pb",
				"publicKey"
			],
			[
				"tasl",
				"taskLists"
			],
			[
				"tli",
				"taskLists"
			],
			[
				"tas",
				"taskList"
			],
			[
				"taK",
				"taskList"
			],
			[
				"bu",
				"buildDockerImage"
			],
			[
				"list",
				"Listr"
			],
			[
				"bw",
				"buildWebPackPromises"
			],
			[
				"ur",
				"urlResponse"
			],
			[
				"mini",
				"minifyPromises"
			],
			[
				"ti",
				"tidyCache"
			],
			[
				"ad",
				"addEventListener"
			],
			[
				"der",
				"derivedKey"
			],
			[
				"min",
				"minifyJs"
			],
			[
				"tsa",
				"taskList"
			],
			[
				"sts",
				"startServer"
			],
			[
				"butt",
				"buttonState"
			],
			[
				"pri-",
				"primary-colour-light"
			],
			[
				"box-s",
				"box-shadow"
			],
			[
				"imp",
				"imagPart"
			],
			[
				"xm",
				"xMax"
			],
			[
				"im",
				"imagPart"
			],
			[
				"real",
				"realPart"
			],
			[
				"int",
				"interval"
			],
			[
				"po",
				"PolynomialImage"
			],
			[
				"sol",
				"solutionConn"
			],
			[
				"buf",
				"bufio"
			],
			[
				"solv",
				"solved"
			],
			[
				"proc",
				"processSolved"
			],
			[
				"log",
				"logger"
			],
			[
				"wa",
				"WaitGroup"
			],
			[
				"solut",
				"solutions"
			],
			[
				"file",
				"filepath"
			],
			[
				"w",
				"WaitGroup"
			],
			[
				"in",
				"int8"
			],
			[
				"pre",
				"precision"
			],
			[
				"sc",
				"solutionsChan"
			],
			[
				"Inter",
				"Interval2d"
			],
			[
				"inp",
				"inputs"
			],
			[
				"cha",
				"channels"
			],
			[
				"ch",
				"channels"
			],
			[
				"chan",
				"channels"
			],
			[
				"so",
				"solveGroup"
			],
			[
				"solve",
				"solveGroup"
			],
			[
				"Lis",
				"Listener"
			],
			[
				"EME",
				"emitter"
			],
			[
				"li",
				"Listener"
			],
			[
				"ou",
				"output"
			],
			[
				"out",
				"outputLength"
			],
			[
				"o",
				"outputLength"
			],
			[
				"pretty",
				"pretty_poly"
			],
			[
				"len",
				"length"
			],
			[
				"test",
				"testing"
			],
			[
				"gro",
				"group"
			],
			[
				"grou",
				"groups"
			],
			[
				"gr",
				"groups"
			],
			[
				"tr",
				"transaction"
			],
			[
				"err",
				"errors"
			],
			[
				"h",
				"Horseman"
			],
			[
				"prep",
				"pretty_poly_tests"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "\n\n\n\n\ncertbot certonly -d polonium.rgrannell.world -n --standalone --test-cert --agree-tos --email r.grannell2@gmail.com\n\nBundle 'lsdr/monokai'\n\n\ndocker cp /etc/letsencrypt/live/polonium.rgrannell.world/ app_volume:/data\n\n\n\n\n\n\ndocker create --volume /docker_volume --name shared_certs ubuntu\n\ncertbot certonly -d polonium.rgrannell.world -n --standalone --test-cert --agree-tos --email r.grannell2@gmail.com\n",
			"settings":
			{
				"buffer_size": 407,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test.js",
			"settings":
			{
				"buffer_size": 199,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "y\nO\nS\nk\nX\np\nP\nr\nF\nF\no\nx\nP\nQ\n8\nd\nM\nK\nT\n9",
			"settings":
			{
				"buffer_size": 39,
				"line_ending": "Unix",
				"name": "y"
			}
		},
		{
			"contents": "\n4.15 + ((13.12 - 0.66) * 2)\n\n\n29.07\n",
			"settings":
			{
				"buffer_size": 37,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "color",
		"selected_items":
		[
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"eslit",
				"ESLint Formatter: Format this file"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instl",
				"Package Control: Install Local Dependency"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"colo",
				"UI: Select Color Scheme"
			],
			[
				"standard",
				"Standard Format: Format current file"
			],
			[
				"sta",
				"Standard Format: Toggle format on save"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"git",
				"Plugin Development: Profile Events"
			],
			[
				"jaa",
				"Set Syntax: JavaScript"
			],
			[
				"json",
				"JSON Reindent: reindent file or selection"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"jso",
				"JSON Reindent: reindent file or selection"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"HTML",
				"Set Syntax: HTML"
			],
			[
				"JSON",
				"Set Syntax: JSON"
			]
		],
		"width": 533.0
	},
	"console":
	{
		"height": 248.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/ryan/Code/polonium-server/src/build_sm/models.js",
		"/home/ryan/Code/polonium-server/polonium-server.sublime-project",
		"/home/ryan/Code/polonium-server/src/build/models/index.js",
		"/home/ryan/Code/polonium-server/node_modules/mithril/render/render.js",
		"/home/ryan/Code/polonium-server/src/server/app/index.js",
		"/home/ryan/Code/polonium-server/src/build/index.js",
		"/home/ryan/Code/polonium-lib/node_modules/di/lib/module.js",
		"/home/ryan/Code/polonium-server/src/build/build.dockerfile",
		"/home/ryan/Code/polonium-server/dist/server/app/index.js",
		"/home/ryan/Code/polonium-server/src/build/tasks/index.js",
		"/home/ryan/Code/polonium-server/src/build/pipelines.js",
		"/home/ryan/Code/polonium-server/src/build/stages.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/roles/install-docker/tasks/main.yaml",
		"/home/ryan/Code/polonium-server/build.js",
		"/home/ryan/Code/polonium-server/src/build/tasks/ansible.js",
		"/home/ryan/Code/polonium-server/dist/server/commons/constants.js",
		"/home/ryan/Code/polonium-server/src/server/commons/constants.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/ansible.cfg",
		"/home/ryan/Code/polonium-server/src/build/ansible/roles/obtain-certificates/tasks/main.yaml",
		"/home/ryan/Code/polonium-server/src/build/render/index.js",
		"/home/ryan/Code/polonium-server/src/client/manifest.json",
		"/home/ryan/Code/polonium-server/.gitignore",
		"/home/ryan/Code/polonium-server/src/client/css/polonium.css",
		"/home/ryan/Code/polonium-server/test/commons/utils.js",
		"/home/ryan/Code/polonium-server/test/test-sizes.js",
		"/home/ryan/Code/polonium-server/src/client/index.html",
		"/home/ryan/Code/polonium-server/src/client/core/asset-cache.js",
		"/home/ryan/Code/polonium-server/dist/manifest.json",
		"/home/ryan/Code/polonium-server/config/default.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/roles/start-server/tasks/main.yaml",
		"/home/ryan/Code/polonium-server/src/build/ansible/setup-vm.yaml",
		"/home/ryan/Code/polonium-server/src/build/ansible/settings.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/obtain-certificates.yaml",
		"/home/ryan/Code/polonium-server/src/build/ansible/start-server.yaml",
		"/home/ryan/Code/polonium-server/src/build/commons/constants.js",
		"/home/ryan/Code/avow/constants.js",
		"/home/ryan/Code/polonium-server/src/client/pages/primary.js",
		"/home/ryan/Code/polonium-server/dist/css/polonium.css",
		"/home/ryan/Code/polonium-server/src/build/letsencrypt-server/index.js",
		"/home/ryan/Code/polonium-server/src/server/network/ssl.js",
		"/home/ryan/Code/polonium-server/src/build/tasks/docker.js",
		"/home/ryan/Code/polonium-server/package.json",
		"/home/ryan/Code/polonium-server/src/build/commons/digital-ocean.js",
		"/home/ryan/Code/polonium-site/commons/api/digital-ocean.js",
		"/home/ryan/Code/polonium-server/config/development.js",
		"/home/ryan/Code/polonium-server/src/build/tasks/security.js",
		"/home/ryan/Code/polonium-server/config/credentials/credentials.json",
		"/home/ryan/Code/polonium-server/src/build/tasks/vm.js",
		"/home/ryan/Code/polonium-server/src/build/pipelines/stages.js",
		"/home/ryan/Code/polonium-server/src/build/pipelines/tasks/docker.js",
		"/home/ryan/Code/polonium-server/src/build/pipelines/pipelines.js",
		"/home/ryan/Code/polonium-server/src/build/pipelines/tasks/index.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/roles/update-packages/tasks/main.yaml",
		"/home/ryan/Code/polonium-server/src/build/ansible/roles/copy-client-resources/tasks/main.yaml",
		"/home/ryan/Code/polonium-server/config/credentials/dev_key.sig",
		"/home/ryan/Code/polonium-server/src/build/pipelines/tasks/security.js",
		"/home/ryan/Code/polonium-server/src/build/utils/logger.js",
		"/home/ryan/.config/sublime-text-3/Packages/StandardFormat/StandardFormat.sublime-settings",
		"/home/ryan/Code/locus/src/prompt.js",
		"/home/ryan/Code/locus/test/test-history.js",
		"/home/ryan/Code/locus/src/scripts/postinstall.js",
		"/home/ryan/Code/locus/foopa.js",
		"/home/ryan/Code/locus/test/test-variables.js",
		"/home/ryan/Code/locus/package.json",
		"/home/ryan/Code/locus/constants.js",
		"/home/ryan/Code/locus/test/test-print.js",
		"/home/ryan/Code/locus/src/print.js",
		"/home/ryan/Code/locus/test/utils.js",
		"/home/ryan/Code/locus/src/utils.js",
		"/home/ryan/Code/locus/src/script.js",
		"/home/ryan/Code/locus/src/variables.js",
		"/home/ryan/Code/locus/src/postinstall.js",
		"/home/ryan/Desktop/jeff.txt",
		"/home/ryan/Code/locus/appveyor.yml",
		"/home/ryan/Code/locus/.gitignore",
		"/home/ryan/Code/avow/package.json",
		"/home/ryan/Code/locus/test/mmmmmmm.js",
		"/home/ryan/Code/locus/test/test-cli.js",
		"/home/ryan/Code/avow/index.js",
		"/home/ryan/Code/locus/README.md",
		"/home/ryan/Code/locus/credentials/default.sh",
		"/home/ryan/Code/locus/credentials/default.js",
		"/home/ryan/Code/locus/src/locus.js",
		"/home/ryan/Code/locus/.eslintrc.yml",
		"/home/ryan/Code/locus/.eslintrc.yaml",
		"/home/ryan/Code/locus/test/test-utils.js",
		"/home/ryan/Code/locus/.coveralls.yml",
		"/home/ryan/Downloads/npm-debug (1).log",
		"/home/ryan/Code/locus/.travis.yml",
		"/home/ryan/Code/polonium-server/node_modules/locus/src/variables.js",
		"/home/ryan/Code/locus/package-lock.json",
		"/home/ryan/Code/polonium-server/node_modules/locus/src/script.js",
		"/home/ryan/Code/emmy/index.js",
		"/home/ryan/Code/polonium-server/src/build/cli.js",
		"/home/ryan/Code/polonium-server/src/build/pipelines/tasks/vm.js",
		"/home/ryan/Code/polonium-server/src/build/commons/dependencies.js",
		"/home/ryan/Code/polonium-server/src/build/pipelines/tasks/ansible.js",
		"/home/ryan/Code/polonium-lib/src/app/polonium.js",
		"/home/ryan/Desktop/test.js",
		"/home/ryan/Code/polonium-lib/package.json",
		"/home/ryan/Code/polonium/package.json",
		"/home/ryan/Code/polonium/src/cli/cli.js",
		"/home/ryan/Code/polonium/src/app/polonium.js",
		"/home/ryan/Code/read-to-me/src/index.js",
		"/home/ryan/Code/polonium-server/.eslintrc.json",
		"/home/ryan/Code/polonium-server/src/build/task-lists.js",
		"/home/ryan/Code/polonium-server/src/build/model/index.js",
		"/home/ryan/Code/polonium-server/test/browser.js",
		"/home/ryan/Code/polonium-server/config/production.js",
		"/home/ryan/Code/polonium-server/test/cases/index.js",
		"/home/ryan/Code/polonium-server/test/commons/constants.js",
		"/home/ryan/Code/polonium-server/test/utils/index.js",
		"/home/ryan/Code/polonium-server/src/build/utils/index.js",
		"/home/ryan/Code/polonium-server/test/cases/test.js",
		"/home/ryan/Code/polonium-server/src/build/tasks/model.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/install-docker.yaml",
		"/home/ryan/Code/polonium-server/src/build/utils/dependencies.js",
		"/home/ryan/Code/avow/tests/test-known-values.js",
		"/home/ryan/Code/polonium-server/src/build/utils/promise.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/settings.py",
		"/home/ryan/Code/polonium-server/config/utils/display-config.js",
		"/home/ryan/Code/polonium-server/src/build/ansible/inventory_script.py",
		"/home/ryan/Code/polonium-server/config/development.json",
		"/home/ryan/Code/polonium-server/README.md",
		"/home/ryan/Code/polonium-server/webpack/webpack.config.js",
		"/home/ryan/Code/polonium-server/src/build/tasks.js",
		"/home/ryan/Code/polonium-server/src/client/pages/index.js",
		"/home/ryan/Code/avow/config/eslint.json"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 398.0,
		"where_history":
		[
			"/home/ryan/Code/polonium-server/src/build/ansible",
			"/home/ryan/Code/polonium-server/src/build",
			"/home/ryan/Code/polonium-server",
			"/home/ryan/Code/polonium-server/src/build",
			"/home/ryan/Code/locus/src",
			"/home/ryan/Code/polonium-server/src/build",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/polonium-server/src/build/ansible",
			"/home/ryan/Code/polonium-server/src/build/pipelines",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/polonium-server/src/build",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/polonium-server/src/build",
			"/home/ryan/Code/polonium-server/src/build/pipelines/tasks",
			"/home/ryan/Code/polonium-server/webpack",
			"/home/ryan/Code/polonium-server/src/build/pipelines",
			"/home/ryan/Code/polonium-server/src/build",
			"/home/ryan/Code/polonium-server/src/build/tasks",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/polonium-server/src/build/tasks",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/polonium-server/src/build",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/polonium-server",
			"/home/ryan/Code/pretty-poly/src/github.com/rgrannell",
			"/home/ryan/Code/polonium-server",
			"/home/ryan/Code/polonium-lib/tests",
			"/home/ryan/Code/polonium-lib",
			"/home/ryan/Code/pretty-poly/src/github.com/rgrannell",
			"/home/ryan/Code/pretty-poly/src/github.com/rgrannell/pretty_poly",
			"/home/ryan/Code/pretty-poly",
			"/home/ryan/Code/pretty-poly/src",
			"/home/ryan/Code/polonium-lib/src/app",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/kale",
			"/home/ryan/Code/polonium/src",
			"/home/ryan/Code/polonium",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/kale/src",
			"/home/ryan/Code/kale",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code",
			"/home/ryan/Code/polonium-server/src",
			"/home/ryan/Code/polonium-site",
			"/home/ryan/Code/polonium/src/app"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"buildFailure",
			"({state})",
			"'...'",
			"'x'",
			"'✓'",
			"ansi",
			"''",
			"suffix",
			"})",
			"}",
			"})",
			"suffic",
			"this.output.write('[] ${}')",
			"}) {",
			"buildPending",
			"}) {",
			"(data)",
			"(data",
			"()",
			"reporter",
			"this.logger",
			"logger",
			"BuildEventLog",
			"data",
			"emitter",
			"runPipeline",
			"runStage",
			",",
			"spd",
			"http2S",
			"spdy",
			"get(",
			"httpsApp",
			"router",
			"(req, res) => {\n\n\n\n}",
			"const",
			"const httpApp",
			"Router",
			"(req, res, next)",
			"\\n",
			"new Koa",
			"router",
			"new Koa",
			"koa",
			"httpApp.callback( )",
			"spdy",
			"createReadStream",
			"routers.static",
			"startserver",
			"node ",
			"constants.paths.dist",
			"copy",
			"build",
			"serve",
			"serveer",
			"loca",
			"loca;",
			"startserver",
			"\t\t",
			"spdy",
			"createServer",
			"spdy",
			"http2",
			"console.loog",
			"throw ",
			"mkdir",
			"setupVm",
			"setupVM",
			"deployserver",
			"deployServer",
			"/etc/letsencrypt/archive/polonium.rgrannell",
			"httpApp",
			"cacheUrls",
			"forceSSL",
			"=",
			"http",
			"constant",
			"etc/letsencrypt/live",
			"latest",
			"include",
			"latest",
			"startServer",
			"obtainCertificates",
			"ansible",
			"\\n",
			"path.join",
			"obtainCertificates",
			"obtain",
			"buildDistFolder",
			"deplo",
			"deployserver",
			"app_volume",
			"$ ",
			"grid-column",
			"font-family",
			"aside",
			"padding",
			"aside",
			"ty]",
			"htpp",
			"throw",
			"8080",
			"koaSSL",
			"constants",
			"letEncryptClient",
			"constants",
			"fs",
			"os.",
			"''",
			"paths",
			"letsEncrypt",
			"path",
			"letsEncrypt",
			"letsencrypt",
			"letsEncrypt",
			"secondaryServer",
			"koaSSL",
			"server",
			"koa",
			"le",
			"app",
			"newVm",
			"api.newVm",
			"openSSHTerminal",
			"removeDomainRecord",
			"existingRecords",
			"await digitalOcean",
			"digitalOcean."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 407,
						"regions":
						{
						},
						"selection":
						[
							[
								172,
								172
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "/home/ryan/Code",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "test.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 199,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										193,
										194
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										116,
										117
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"git_gutter_is_enabled": true,
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_name": "y",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37,
						"regions":
						{
						},
						"selection":
						[
							[
								31,
								31
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"default_dir": "/home/ryan/Code",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 138.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "polonium-server.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"render",
				"polonium-server/node_modules/mithril/render/render.js"
			],
			[
				"models",
				"polonium-server/src/build_sm/models.js"
			],
			[
				"modu",
				"polonium-lib/node_modules/di/lib/module.js"
			],
			[
				"pipeln",
				"polonium-server/src/build/pipelines.js"
			],
			[
				"build.dockerf",
				"polonium-server/src/build/build.dockerfile"
			],
			[
				"build.docker",
				"polonium-server/src/build/build.dockerfile"
			],
			[
				"stages.",
				"polonium-server/src/build/stages.js"
			],
			[
				"manif",
				"polonium-server/src/client/manifest.json"
			],
			[
				"manifest.",
				"polonium-server/dist/manifest.json"
			],
			[
				"ansible",
				"polonium-server/src/build/tasks/ansible.js"
			],
			[
				"constants",
				"avow/constants.js"
			],
			[
				"primary.",
				"polonium-server/src/client/pages/primary.js"
			],
			[
				"polonium.css",
				"polonium-server/dist/css/polonium.css"
			],
			[
				"docker",
				"polonium-server/src/build/tasks/docker.js"
			],
			[
				"digital-",
				"polonium-site/commons/api/digital-ocean.js"
			],
			[
				"print.js",
				"locus/src/print.js"
			],
			[
				"utils",
				"locus/test/utils.js"
			],
			[
				"utils.js",
				"locus/src/utils.js"
			],
			[
				"testprint",
				"locus/test/test-print.js"
			],
			[
				"print.j",
				"locus/src/print.js"
			],
			[
				"test-",
				"locus/test/test-history.js"
			],
			[
				"print",
				"locus/src/print.js"
			],
			[
				"packa",
				"avow/package.json"
			],
			[
				"inde",
				"avow/index.js"
			],
			[
				"cons",
				"avow/constants.js"
			],
			[
				"srscript",
				"locus/src/script.js"
			],
			[
				".esl",
				"locus/.eslintrc.json"
			],
			[
				"uti",
				"locus/src/utils.js"
			],
			[
				"stages",
				"polonium-server/src/build/pipelines/stages.js"
			],
			[
				"ansibe",
				"polonium-server/src/build/ansible/ansible.cfg"
			],
			[
				"render.js",
				"polonium-server/node_modules/mithril/render/render.js"
			],
			[
				"vm.js",
				"polonium-server/src/build/tasks/vm.js"
			],
			[
				"dependenc",
				"polonium-server/src/build/utils/dependencies.js"
			],
			[
				"digital",
				"polonium-site/commons/api/digital-ocean.js"
			],
			[
				"build.js",
				"polonium-server/build.js"
			],
			[
				"eslint",
				"avow/config/eslint.json"
			],
			[
				"karm",
				"polonium-lib/karma.conf.js"
			],
			[
				"primary",
				"polonium-server/src/client/pages/primary.js"
			],
			[
				"asscache",
				"polonium-server/asset-cache.js"
			],
			[
				"polcss",
				"polonium-server/dist/css/polonium.css"
			],
			[
				"foo.j",
				"polonium-lib/node_modules/request-progress/foo.js"
			],
			[
				"karma.conf",
				"polonium-lib/karma.conf.js"
			],
			[
				"io.go",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/io.go"
			],
			[
				"image.go",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/image.go"
			],
			[
				"geocode",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/geocode.go"
			],
			[
				"pretpo",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/pretty_poly.go"
			],
			[
				"prepol.go",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/pretty_poly.go"
			],
			[
				"prepotes",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/pretty_poly_test.go"
			],
			[
				"prettpo",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/pretty_poly.go"
			],
			[
				"maingo",
				"pretty-poly/src/github.com/rgrannell/pretty_poly_cli/main.go"
			],
			[
				"geoc",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/geocode.go"
			],
			[
				"prepolyes",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/pretty_poly_test.go"
			],
			[
				"make",
				"avow/Makefile"
			],
			[
				"pack",
				"bank/package.json"
			],
			[
				"uti.go",
				"pretty-poly/src/github.com/rgrannell/pretty_poly/utils.go"
			],
			[
				"pretpol",
				"pretty-poly/dockerfiles/test-pretty-poly.txt"
			],
			[
				"main.go",
				"pretty-poly/src/github.com/rgrannell/pretty_poly_cli/main.go"
			],
			[
				"bui",
				"polonium-server/build.js"
			],
			[
				"primar",
				"polonium-server/src/client/pages/primary.js"
			],
			[
				"buil",
				"polonium-server/build.js"
			],
			[
				"buidl",
				"polonium-server/build.js"
			],
			[
				"crypto",
				"polonium/snapcraft/prime/include/node/openssl/crypto.h"
			],
			[
				"foo.js",
				"polonium-server/src/js/app/foo.js"
			],
			[
				"indehtml",
				"polonium-lib/node_modules/fu/index.html"
			],
			[
				"web",
				"polonium-server/webpack.config.js"
			],
			[
				"slavepassword",
				"polonium/node_modules/polonium/src/app/slave-password.js"
			],
			[
				"snapcra",
				"polonium/snapcraft/snapcraft.yaml"
			],
			[
				"snapcraf",
				"polonium/snapcraft/snapcraft.yaml"
			],
			[
				"dat2",
				"bank/data2.json"
			],
			[
				"dajs",
				"bank/data.json"
			],
			[
				"dajson",
				"bank/data.json"
			],
			[
				"dat",
				"bank/data.json"
			],
			[
				"creden",
				"polonium-site/config/credentials.json"
			],
			[
				"eng",
				"polonium-lib/src/data/english-words.json"
			],
			[
				"commonpas",
				"polonium-lib/src/data/common-passwords.json"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 290.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
